name: apps deployment
on:
  workflow_dispatch:
    inputs:
      name:
        description: "target environment name"
        required: true
jobs:
  deploy_source:
    name: apps
    runs-on: ubuntu-latest
    env:
      CN: dev
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: eu-central-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: 773342935443.dkr.ecr.eu-central-1.amazonaws.com/devops-cluster-dev:latest
      # - name: set path variables as kubectl
      #   run: |
      #     curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      #     chmod +x kubectl && mkdir bin && mv kubectl bin/
      #     export PATH=$PATH:$HOME/bin
      # - name: kubernetes credentials download
      #   run: aws eks --region eu-central-1 update-kubeconfig --name $CN
      # - name: docker image configuration
      #   run: |
      #     TAG=11
      #     IMAGE=node-app:$TAG
      #     DOCKER_HUB=jjino
      #     sed -i 's/containerImageName/'"$DOCKER_HUB\/$IMAGE"'/g' kube-deployment/main.yml
      # - name: kubernetes deployment configuration
      #   run: kubectl apply -f kube-deployment/main.yml
      # - name: kubernetes get status
      #   run: kubectl get po,svc
